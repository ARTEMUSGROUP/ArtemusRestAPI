package com.artemus.app.dao;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.artemus.app.connection.DBConnectionFactory;
import com.artemus.app.model.request.Vessel;

public class VesselDAO {

	static Logger log = LogManager.getLogger();
	private Connection con;
	private java.sql.PreparedStatement stmt = null;
	private ResultSet rs = null;

	public VesselDAO() {
		con = DBConnectionFactory.getConnection();
		try {
			con.setAutoCommit(false);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void commit() {
		try {
			con.commit();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public void closeAll() {
		try {
			if (con != null)
				con.close();
			if (rs != null)
				rs.close();
			if (stmt != null)
				stmt.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public int validateVessel(String vesselName, String loginScac) {
		try {
			stmt = con.prepareStatement("Select vessel_id from vessel " +
					" where vessel_name=? and login_scac=?");
			stmt.setString(1, vesselName);
			stmt.setString(2, loginScac);
			rs=stmt.executeQuery();
			log.info(stmt.toString());
			rs=stmt.executeQuery();
			if (rs.next()){
				return rs.getInt(1);
			}
		} catch (SQLException e) {			
			e.printStackTrace();
		}
		return 0;
	}
	
	public String insert(Vessel objmVesselBean) throws SQLException {

		String result="";
		int autoIncrementId=0;
		
			
			stmt= con.prepareStatement("Insert into vessel " +
					"(login_scac, vessel_name, vessel_type, " +
					" owner, lloyds_code, send_to_custom1, send_to_custom2, " +
					" country, usa_scac_code, is_voyage_created, created_user, created_date,canada_carrier_code,master_name,call_sign,jpn_carrier_code )" +
					" VALUES (?,?,?,?,?,?,?,?,?,?,?,now(),?,?,?,?) ",Statement.RETURN_GENERATED_KEYS);
			stmt.setString(1,objmVesselBean.getLoginScac());
			stmt.setString(2,objmVesselBean.getVesselName());
			stmt.setString(3,objmVesselBean.getVesselType());
			stmt.setString(4,objmVesselBean.getOwner());
			stmt.setString(5,objmVesselBean.getLloydsCode());
			stmt.setBoolean(6,false);
			stmt.setBoolean(7,true);
			stmt.setString(8,objmVesselBean.getCountryCode());
			stmt.setString(9,objmVesselBean.getUsaScacCode());
			stmt.setBoolean(10,false);
			stmt.setString(11,"admin");
			stmt.setString(12,objmVesselBean.getCanadaCarrierCode());
			stmt.setString(13,objmVesselBean.getMasterOfVessel());
			stmt.setString(14, objmVesselBean.getCallSign());
			stmt.setString(15, objmVesselBean.getJpnCarrierCode());
				stmt.execute();
				rs = stmt.getGeneratedKeys();
			if (rs.next()) {
				log.info("rs go back" + rs.getString(1));
				autoIncrementId = rs.getInt(1);
			}
			else  
				log.info("Autogenerated key nt returned");
			stmt= con.prepareStatement("Insert into vessel_details " +
					"(vessel_id,login_scac, vessel_registry_place, vessel_registry_number, " +
					" length, length_unit, ship_owner, net_weight, net_weight_unit," +
					" gross_weight, gross_weight_unit, containerized_weight, " +
					" containerized_weight_unit, non_containerized_weight, " +
					" non_containerized_weight_unit, summer_dead_weight, " +
					" summer_dead_weight_unit, ship_certificate, ship_certificate_exp_date, " +
					" radio_certificate, radio_certificate_exp_date, equipment_certificate, " +
					" equipment_certificate_exp_date, load_line_certificate, " +
					" load_line_certificate_exp_date, derat_certificate, " +
					" derat_certificate_exp_date, health_certificate, health_certificate_exp_date, " +
					" oil_certificate, oil_certificate_exp_date,ship_line, ship_agent, consortium_prtners, ship_l_customer_id, ship_a_customer_id, consortium_customer_id, ship_o_customer_id )" +
					" values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? )");
			stmt.setInt(1, autoIncrementId);
			stmt.setString(2,  objmVesselBean.getLoginScac());
			stmt.setString(3, "");
			stmt.setString(4, "");
			stmt.setString(5,  "");
			stmt.setString(6,  "");
			stmt.setString(7,  "");
			stmt.setString(8,  "");
			stmt.setString(9,   "");
			stmt.setString(10,  "");
			stmt.setString(11,  "");
			stmt.setString(12,  "");
			stmt.setString(13, "");
			stmt.setString(14,  "");
			stmt.setString(15,  "");
			stmt.setString(16,  "");
			stmt.setString(17,  "");
			stmt.setString(18,  "");
			stmt.setString(19,  null);
			stmt.setString(20,  "");
			stmt.setString(21, null);
			stmt.setString(22,  "");
			stmt.setString(23, null);
			stmt.setString(24,  "");
			stmt.setString(25, null);
			stmt.setString(26,  "");
			stmt.setString(27, null);
			stmt.setString(28,  "");
			stmt.setString(29, null);
			stmt.setString(30,  "");
			stmt.setString(31, null);
			stmt.setString(32,  "");
			stmt.setString(33,  "");
			stmt.setString(34,  "");
			stmt.setInt(35,  0);
			stmt.setInt(36, 0);
			stmt.setInt(37, 0);
			stmt.setInt(38,0);
			
			stmt.execute();

		result="Success";
		
		return result;
	}
	
	public String update (Vessel objmVesselBean) throws SQLException {

		String result="";
		int a=0;int b=0;
		
			stmt = con.prepareStatement("Update vessel set" +
					" vessel_name=?, vessel_type=?, owner=?, lloyds_code=?, " +
					" send_to_custom1=?, send_to_custom2=?, country=?, usa_scac_code=? ,canada_carrier_code=? ,master_name=?, call_sign=?, jpn_carrier_code=?" +
					" where vessel_id=?");
			stmt.setString(1,objmVesselBean.getVesselName());
			stmt.setString(2,objmVesselBean.getVesselType());
			stmt.setString(3,objmVesselBean.getOwner());
			stmt.setString(4,objmVesselBean.getLloydsCode());
			stmt.setBoolean(5,false);
			stmt.setBoolean(6,true);
			stmt.setString(7,objmVesselBean.getCountryCode());
			stmt.setString(8,objmVesselBean.getUsaScacCode());
			stmt.setString(9,objmVesselBean.getCanadaCarrierCode());
			stmt.setString(10,objmVesselBean.getMasterOfVessel());
			stmt.setString(11, objmVesselBean.getCallSign());
			stmt.setString(12, objmVesselBean.getJpnCarrierCode());
			stmt.setInt(13, objmVesselBean.getVesselId());
			
			a=stmt.executeUpdate();
			
			if(a>0){
			result="Success";
			}else{
				result="Error";
			}
		
		return result;
	}
	
	public Boolean isExistLloydsCode(String lloydsCode,String loginScac){
		ResultSet rs=null;
		Boolean result=true;
		try{
			stmt = con.prepareStatement("Select * from vessel " +
					" where lloyds_code=? and login_scac=?");
			stmt.setString(1, lloydsCode);
			stmt.setString(2, loginScac);
			rs=stmt.executeQuery();
			if (rs.next()){
				result=true;
		}else{
			result=false;
		}
		}catch(Exception e){
			e.printStackTrace();
		}
		return result;
	}
	
	public boolean getJapanCarrierCode (String carrierCode ) {
		boolean isExistsCarrier=false;
		try {
			stmt = con.prepareStatement(" Select " +
					" carrier_code, description " +
					" from japan_carrier_code " +
					" where carrier_code=?");
			
			stmt.setString(1, carrierCode);
			log.info(stmt.toString());
			rs= stmt.executeQuery();
			if(rs.next()){
				isExistsCarrier=true;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return isExistsCarrier;
	}
	
}
